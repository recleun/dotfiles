# Print an optspec for argparse to handle cmd's options that are independent of any subcommand.
function __fish_pmgr_global_optspecs
	string join \n h/help V/version
end

function __fish_pmgr_needs_command
	# Figure out if the current invocation already has a command.
	set -l cmd (commandline -opc)
	set -e cmd[1]
	argparse -s (__fish_pmgr_global_optspecs) -- $cmd 2>/dev/null
	or return
	if set -q argv[1]
		# Also print the command, so this can be used to figure out what it is.
		echo $argv[1]
		return 1
	end
	return 0
end

function __fish_pmgr_using_subcommand
	set -l cmd (__fish_pmgr_needs_command)
	test -z "$cmd"
	and return 1
	contains -- $cmd[1] $argv
end

complete -c pmgr -n "__fish_pmgr_needs_command" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_needs_command" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "read" -d 'Print the project\'s JSON data'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "list" -d 'List a group\'s data or active groups data'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "check" -d 'Checks for a project in current and parent directories'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "init" -d 'Initialize a project in the current directory'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "set" -d 'Set project\'s information fields'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "create" -d 'Create a group in the current project'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "delete" -d 'Delete a group in the current project'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "watch" -d 'Watch a group or a list of groups'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "unwatch" -d 'Unwatch a group or a list of groups'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "add" -d 'Add some data to a group'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "remove" -d 'Remove some data from a group'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "task" -d 'Do some commands to tasks'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "shell-completions" -d 'Generate shell completions for pmgr'
complete -c pmgr -n "__fish_pmgr_needs_command" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand read" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand read" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand list" -s a -l all -d 'Use this flag to list all groups in the project (ignores GROUP_NAME)'
complete -c pmgr -n "__fish_pmgr_using_subcommand list" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand list" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand check" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand check" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand init" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand init" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and not __fish_seen_subcommand_from title description repo help" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and not __fish_seen_subcommand_from title description repo help" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and not __fish_seen_subcommand_from title description repo help" -f -a "title" -d 'Set the title of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and not __fish_seen_subcommand_from title description repo help" -f -a "description" -d 'Set the description of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and not __fish_seen_subcommand_from title description repo help" -f -a "repo" -d 'Set the repository link of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and not __fish_seen_subcommand_from title description repo help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from title" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from title" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from description" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from description" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from repo" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from repo" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from help" -f -a "title" -d 'Set the title of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from help" -f -a "description" -d 'Set the description of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from help" -f -a "repo" -d 'Set the repository link of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand set; and __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand create" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand create" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand delete" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand delete" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand watch" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand watch" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand unwatch" -s a -l all -d 'Use this flag to unwatch all watched group (ignotes GROUP_NAMES)'
complete -c pmgr -n "__fish_pmgr_using_subcommand unwatch" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand unwatch" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and not __fish_seen_subcommand_from note task help" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and not __fish_seen_subcommand_from note task help" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and not __fish_seen_subcommand_from note task help" -f -a "note" -d 'Add a note to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and not __fish_seen_subcommand_from note task help" -f -a "task" -d 'Add a task to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and not __fish_seen_subcommand_from note task help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from note" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from note" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from task" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from task" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from help" -f -a "note" -d 'Add a note to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from help" -f -a "task" -d 'Add a task to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand add; and __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and not __fish_seen_subcommand_from note task help" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and not __fish_seen_subcommand_from note task help" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and not __fish_seen_subcommand_from note task help" -f -a "note" -d 'Remove note(s) from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and not __fish_seen_subcommand_from note task help" -f -a "task" -d 'Remove task(s) from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and not __fish_seen_subcommand_from note task help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from note" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from note" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from task" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from task" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from help" -f -a "note" -d 'Remove note(s) from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from help" -f -a "task" -d 'Remove task(s) from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand remove; and __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and not __fish_seen_subcommand_from complete undo progress help" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and not __fish_seen_subcommand_from complete undo progress help" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and not __fish_seen_subcommand_from complete undo progress help" -f -a "complete" -d 'Set task(s) as complete'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and not __fish_seen_subcommand_from complete undo progress help" -f -a "undo" -d 'Set task(s) as incomplete'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and not __fish_seen_subcommand_from complete undo progress help" -f -a "progress" -d 'View the progress of a group or watched groups'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and not __fish_seen_subcommand_from complete undo progress help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from complete" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from complete" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from undo" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from undo" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from progress" -s a -l all -d 'Use this flag to view progress of all groups in the project (ignores GROUP_NAME)'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from progress" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from progress" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from help" -f -a "complete" -d 'Set task(s) as complete'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from help" -f -a "undo" -d 'Set task(s) as incomplete'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from help" -f -a "progress" -d 'View the progress of a group or watched groups'
complete -c pmgr -n "__fish_pmgr_using_subcommand task; and __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand shell-completions" -s h -l help -d 'Print help'
complete -c pmgr -n "__fish_pmgr_using_subcommand shell-completions" -s V -l version -d 'Print version'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "read" -d 'Print the project\'s JSON data'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "list" -d 'List a group\'s data or active groups data'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "check" -d 'Checks for a project in current and parent directories'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "init" -d 'Initialize a project in the current directory'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "set" -d 'Set project\'s information fields'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "create" -d 'Create a group in the current project'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "delete" -d 'Delete a group in the current project'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "watch" -d 'Watch a group or a list of groups'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "unwatch" -d 'Unwatch a group or a list of groups'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "add" -d 'Add some data to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "remove" -d 'Remove some data from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "task" -d 'Do some commands to tasks'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "shell-completions" -d 'Generate shell completions for pmgr'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and not __fish_seen_subcommand_from read list check init set create delete watch unwatch add remove task shell-completions help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from set" -f -a "title" -d 'Set the title of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from set" -f -a "description" -d 'Set the description of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from set" -f -a "repo" -d 'Set the repository link of the project'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from add" -f -a "note" -d 'Add a note to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from add" -f -a "task" -d 'Add a task to a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from remove" -f -a "note" -d 'Remove note(s) from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from remove" -f -a "task" -d 'Remove task(s) from a group'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from task" -f -a "complete" -d 'Set task(s) as complete'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from task" -f -a "undo" -d 'Set task(s) as incomplete'
complete -c pmgr -n "__fish_pmgr_using_subcommand help; and __fish_seen_subcommand_from task" -f -a "progress" -d 'View the progress of a group or watched groups'
